'use client'

import { useState, useEffect, useCallback } from 'react'
import { createClient } from '@/utils/supabase/client'
import { useRouter } from 'next/navigation'

interface DonationTarget {
  id: string
  name: string
  description: string
  logo_url: string | null
  website_url: string | null
}

export default function OnboardingPage() {
  const router = useRouter()
  const supabase = createClient()
  
  const [step, setStep] = useState(0)
  const [loading, setLoading] = useState(false)
  const [donationTargets, setDonationTargets] = useState<DonationTarget[]>([])
  const [error, setError] = useState('')
  const [isLoadingTargets, setIsLoadingTargets] = useState(false)
  const [totalTargetsCount, setTotalTargetsCount] = useState(0)
  
  // „Éï„Ç©„Éº„É†„Éá„Éº„Çø
  const [formData, setFormData] = useState({
    smokingFrequency: 'daily' as 'daily' | 'weekly' | 'monthly',
    smokingAmount: 1,
    participationFee: 15000,
    payoutMethod: 'donation' as 'refund' | 'donation',
    donationTargetId: '',
    recordTime: '20:00'
  })

  const checkUserProfile = useCallback(async () => {
    try {
      const { data: { user } } = await supabase.auth.getUser()
      if (!user) {
        router.push('/auth/login')
        return
      }

      // Êó¢Â≠ò„ÅÆ„Éó„É≠„Éï„Ç°„Ç§„É´„Åå„ÅÇ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
      const { data: profile } = await supabase
        .from('user_profiles')
        .select('*')
        .eq('user_id', user.id)
        .single()

      if (profile) {
        // Êó¢„Å´„Éó„É≠„Éï„Ç°„Ç§„É´„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏
        router.push('/dashboard')
      }
    } catch (error) {
      console.error('„Éó„É≠„Éï„Ç°„Ç§„É´Á¢∫Ë™ç„Ç®„É©„Éº:', error)
    }
  }, [supabase, router])

  const fetchDonationTargets = useCallback(async () => {
    setIsLoadingTargets(true)
    try {
      const { data, error, count } = await supabase
        .from('donation_targets')
        .select('*', { count: 'exact' })
        .eq('is_active', true)
        .order('name')
      
      if (error) {
        console.error('ÂãüÈáëÂÖàÂèñÂæó„Ç®„É©„Éº:', error)
        setError('ÂãüÈáëÂÖà„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
        return
      }

      if (data && data.length > 0) {
        setTotalTargetsCount(count || data.length)
        // „É©„É≥„ÉÄ„É†„Å´‰∏¶„Å≥Êõø„Åà„Å¶6„Å§„ÅÆ„Åä„Åô„Åô„ÇÅ„ÇíÈÅ∏Êäû
        const shuffledData = [...data].sort(() => Math.random() - 0.5)
        const recommendedTargets = shuffledData.slice(0, 6)
        setDonationTargets(recommendedTargets)
        setFormData(prev => ({ ...prev, donationTargetId: recommendedTargets[0].id }))
      } else {
        setError('Âà©Áî®ÂèØËÉΩ„Å™ÂãüÈáëÂÖà„Åå„ÅÇ„Çä„Åæ„Åõ„Çì')
      }
    } catch (error) {
      console.error('ÂãüÈáëÂÖàÂèñÂæó„Ç®„É©„Éº:', error)
      setError('ÂãüÈáëÂÖà„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
    } finally {
      setIsLoadingTargets(false)
    }
  }, [supabase])

  useEffect(() => {
    fetchDonationTargets()
    checkUserProfile()
  }, [fetchDonationTargets, checkUserProfile])

  const refreshRecommendations = () => {
    fetchDonationTargets()
  }

  const calculateMonthlyAmount = useCallback(() => {
    const pricePerPack = 500 // 1ÁÆ±500ÂÜÜ„Å®‰ªÆÂÆö
    let monthlyPacks = 0

    switch (formData.smokingFrequency) {
      case 'daily':
        monthlyPacks = formData.smokingAmount * 30
        break
      case 'weekly':
        monthlyPacks = formData.smokingAmount * 4
        break
      case 'monthly':
        monthlyPacks = formData.smokingAmount
        break
    }

    const monthlyAmount = monthlyPacks * pricePerPack
    // 100„ÅÆ‰Ωç„ÅßÂõõÊç®‰∫îÂÖ•
    return Math.round(monthlyAmount / 100) * 100
  }, [formData.smokingFrequency, formData.smokingAmount])

  useEffect(() => {
    const calculatedFee = calculateMonthlyAmount()
    setFormData(prev => ({ ...prev, participationFee: calculatedFee }))
  }, [calculateMonthlyAmount])

  // ÂèÇÂä†Ë≤ª„ÅÆ„Éó„É´„ÉÄ„Ç¶„É≥ÈÅ∏ÊäûËÇ¢„ÇíÂãïÁöÑ„Å´ÁîüÊàê
  const generateParticipationFeeOptions = () => {
    const recommendedFee = calculateMonthlyAmount()
    const baseOptions = [0, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000, 6000, 7000, 8000, 9000, 10000, 12000, 15000, 18000, 20000, 25000, 30000, 35000, 40000, 45000, 50000]
    
    // Êé®Â•®ÈáëÈ°ç„ÅåÊó¢Â≠ò„ÅÆÈÅ∏ÊäûËÇ¢„Å´„Å™„ÅÑÂ†¥Âêà„ÅØËøΩÂä†
    if (!baseOptions.includes(recommendedFee)) {
      baseOptions.push(recommendedFee)
      baseOptions.sort((a, b) => a - b) // ÊòáÈ†Ü„Åß„ÇΩ„Éº„Éà
    }
    
    return baseOptions
  }

  const handleSubmit = async () => {
    console.log('üöÄ „ÉÅ„É£„É¨„É≥„Ç∏ÈñãÂßã„Éú„Çø„É≥„ÅåÊäº„Åï„Çå„Åæ„Åó„Åü')
    setLoading(true)
    setError('')
    
    try {
      console.log('1Ô∏è‚É£ „É¶„Éº„Ç∂„ÉºË™çË®ºÁ¢∫Ë™ç‰∏≠...')
      const { data: { user } } = await supabase.auth.getUser()
      if (!user) {
        console.log('‚ùå „É¶„Éº„Ç∂„ÉºË™çË®ºÂ§±Êïó')
        setError('„É¶„Éº„Ç∂„ÉºË™çË®º„ÅåÂøÖË¶Å„Åß„Åô')
        router.push('/auth/login')
        return
      }
      console.log('‚úÖ „É¶„Éº„Ç∂„ÉºË™çË®ºÊàêÂäü:', user.email)

      // „Éê„É™„Éá„Éº„Ç∑„Éß„É≥
      console.log('2Ô∏è‚É£ „Éê„É™„Éá„Éº„Ç∑„Éß„É≥Á¢∫Ë™ç‰∏≠...')
      if (formData.payoutMethod === 'donation' && !formData.donationTargetId) {
        console.log('‚ùå ÂãüÈáëÂÖàÊú™ÈÅ∏Êäû')
        setError('ÂãüÈáëÂÖà„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ')
        return
      }
      console.log('‚úÖ „Éê„É™„Éá„Éº„Ç∑„Éß„É≥ÊàêÂäü')

      console.log('3Ô∏è‚É£ „Éó„É≠„Éï„Ç°„Ç§„É´‰ΩúÊàê„Éá„Éº„ÇøÊ∫ñÂÇô‰∏≠...')
      const profileData = {
        user_id: user.id,
        smoking_frequency: formData.smokingFrequency,
        smoking_amount: formData.smokingAmount,
        participation_fee: formData.participationFee,
        payout_method: formData.payoutMethod,
        donation_target_id: formData.payoutMethod === 'donation' ? formData.donationTargetId : null,
        record_time: formData.recordTime
      }
      console.log('üìã „Éó„É≠„Éï„Ç°„Ç§„É´‰ΩúÊàê„Éá„Éº„Çø:', profileData)

      // „É¶„Éº„Ç∂„Éº„Éó„É≠„Éï„Ç°„Ç§„É´„ÅÆ‰ΩúÊàê
      console.log('4Ô∏è‚É£ „Éó„É≠„Éï„Ç°„Ç§„É´‰ΩúÊàêÂÆüË°å‰∏≠...')
      const { data: createdProfile, error: profileError } = await supabase
        .from('user_profiles')
        .insert(profileData)
        .select()

      if (profileError) {
        console.error('‚ùå „Éó„É≠„Éï„Ç°„Ç§„É´‰ΩúÊàê„Ç®„É©„Éº:', profileError)
        setError(`„Éó„É≠„Éï„Ç°„Ç§„É´‰ΩúÊàê„Ç®„É©„Éº: ${profileError.message}`)
        return
      }

      console.log('‚úÖ „Éó„É≠„Éï„Ç°„Ç§„É´‰ΩúÊàêÊàêÂäü:', createdProfile)

      // „ÉÅ„É£„É¨„É≥„Ç∏„ÅÆ‰ΩúÊàê
      console.log('5Ô∏è‚É£ „ÉÅ„É£„É¨„É≥„Ç∏‰ΩúÊàêÊ∫ñÂÇô‰∏≠...')
      const startDate = new Date()
      const endDate = new Date(startDate)
      endDate.setDate(endDate.getDate() + 30)

      const challengeData = {
        user_id: user.id,
        start_date: startDate.toISOString().split('T')[0],
        end_date: endDate.toISOString().split('T')[0],
        status: 'active' as const
      }

      console.log('üìã „ÉÅ„É£„É¨„É≥„Ç∏‰ΩúÊàê„Éá„Éº„Çø:', challengeData)

      console.log('6Ô∏è‚É£ „ÉÅ„É£„É¨„É≥„Ç∏‰ΩúÊàêÂÆüË°å‰∏≠...')
      const { data: challengeResult, error: challengeError } = await supabase
        .from('challenges')
        .insert(challengeData)
        .select()

      if (challengeError) {
        console.error('‚ùå „ÉÅ„É£„É¨„É≥„Ç∏‰ΩúÊàê„Ç®„É©„Éº:', challengeError)
        setError(`„ÉÅ„É£„É¨„É≥„Ç∏‰ΩúÊàê„Ç®„É©„Éº: ${challengeError.message}`)
        return
      }

      console.log('‚úÖ „ÉÅ„É£„É¨„É≥„Ç∏‰ΩúÊàêÊàêÂäü:', challengeResult)

      // ÂèÇÂä†Ë≤ª„Åå0ÂÜÜ„ÅÆÂ†¥Âêà„ÅØÊ±∫Ê∏à„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Å¶„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏
      console.log('7Ô∏è‚É£ ÈÅ∑ÁßªÂÖàÊ±∫ÂÆö‰∏≠...')
      if (formData.participationFee === 0) {
        console.log('üí∞ 0ÂÜÜÂèÇÂä† ‚Üí „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏ÈÅ∑Áßª')
        router.push('/dashboard?setup=complete')
      } else {
        console.log('üí≥ ÊúâÊñôÂèÇÂä† ‚Üí Ê±∫Ê∏à„Éö„Éº„Ç∏„Å∏ÈÅ∑Áßª')
        router.push(`/payment?challenge_id=${challengeResult[0].id}`)
      }
      console.log('üéâ Âá¶ÁêÜÂÆå‰∫ÜÔºÅ')
    } catch (error) {
      console.error('üí• ‰∫àÊúü„Åó„Å™„ÅÑ„Ç®„É©„Éº:', error)
      setError(`‰∫àÊúü„Åó„Å™„ÅÑ„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error instanceof Error ? error.message : String(error)}`)
    } finally {
      setLoading(false)
      console.log('üèÅ handleSubmitÂá¶ÁêÜÁµÇ‰∫Ü')
    }
  }

  const nextStep = () => {
    setError('')
    // ËøîÈáëÈÅ∏ÊäûÊôÇ„ÅØ„Çπ„ÉÜ„ÉÉ„Éó4ÔºàÂãüÈáëÂÖàÈÅ∏ÊäûÔºâ„Çí„Çπ„Ç≠„ÉÉ„Éó
    if (step === 3 && formData.payoutMethod === 'refund') {
      setStep(5)
    } else {
      setStep(step + 1)
    }
  }
  
  const prevStep = () => {
    setError('')
    // ËøîÈáëÈÅ∏ÊäûÊôÇ„Åß„Çπ„ÉÜ„ÉÉ„Éó5„Åã„ÇâÊàª„ÇãÂ†¥Âêà„ÅØ„Çπ„ÉÜ„ÉÉ„Éó3„Å´Êàª„Çã
    if (step === 5 && formData.payoutMethod === 'refund') {
      setStep(3)
    } else {
      setStep(step - 1)
    }
  }

  const handleSelectChange = (callback: () => void) => {
    callback()
  }

  const handleRadioClick = (callback: () => void) => {
    callback()
  }

  const handleRefreshRecommendations = () => {
    refreshRecommendations()
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-2xl mx-auto">
        <div className="bg-white rounded-lg shadow-xl p-8">
          {/* „Ç®„É©„ÉºË°®Á§∫ */}
          {error && (
            <div className="mb-6 bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded">
              {error}
            </div>
          )}

          {/* „Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº */}
          <div className="mb-8">
            <div className="flex items-center justify-between mb-2">
              <span className="text-sm font-medium text-gray-600">Ë®≠ÂÆöÈÄ≤Êçó</span>
              <span className="text-sm font-medium text-gray-600">{step + 1}/6</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2">
              <div 
                className="bg-indigo-600 h-2 rounded-full transition-all duration-300"
                style={{ width: `${((step + 1) / 6) * 100}%` }}
              />
            </div>
          </div>

          {/* „Çπ„ÉÜ„ÉÉ„Éó0: „Ç≤„Éº„É†„É´„Éº„É´Ë™¨Êòé */}
          {step === 0 && (
            <div className="space-y-6">
              <div className="text-center">
                <span className="text-6xl block mb-6">üêâ</span>
                <h2 className="text-3xl font-bold text-gray-900 mb-4">„Éû„Éç„Éº„É¢„É≥„Çπ„Çø„Éº„Å®„ÅÆÊà¶„ÅÑ</h2>
                <p className="text-lg text-gray-600 mb-6">
                  Á¶ÅÁÖô30Êó•„ÉÅ„É£„É¨„É≥„Ç∏„ÅØ„ÄÅ„ÅÇ„Å™„Åü„ÅÆ„ÅäÈáë„ÇíÂ•™„ÅÜ<br />
                  „Äé„Éû„Éç„Éº„É¢„É≥„Çπ„Çø„Éº„Äè„ÇíÂÄí„Åô„Ç≤„Éº„É†„Åß„ÅôÔºÅ
                </p>
              </div>

              <div className="bg-gradient-to-r from-purple-50 to-indigo-50 rounded-lg p-6 space-y-4">
                <h3 className="text-xl font-bold text-gray-900 mb-4">üéÆ „Ç≤„Éº„É†„É´„Éº„É´</h3>
                
                <div className="space-y-3 text-sm">
                  <div className="flex items-start space-x-3">
                    <span className="text-2xl">üìù</span>
                    <div>
                      <p className="font-medium text-gray-900">ÊØéÊó•Ë®òÈå≤„Çí„Å§„Åë„Çã„Å†„Åë</p>
                      <p className="text-gray-600">Á¶ÅÁÖô„Åß„Åç„ÅüÊó•„ÇÇ„ÄÅÂê∏„Å£„Å¶„Åó„Åæ„Å£„ÅüÊó•„ÇÇ„ÄÅË®òÈå≤„Åô„Çå„Å∞„Éû„Éç„Éº„É¢„É≥„Çπ„Çø„Éº„Å´„ÉÄ„É°„Éº„Ç∏„Çí‰∏é„Åà„Çâ„Çå„Åæ„Åô</p>
                    </div>
                  </div>
                  
                  <div className="flex items-start space-x-3">
                    <span className="text-2xl">üéØ</span>
                    <div>
                      <p className="font-medium text-gray-900">30Êó•Èñì„ÅÆÊåëÊà¶</p>
                      <p className="text-gray-600">Ë®òÈå≤Êó•Êï∞„Å´Âøú„Åò„Å¶„ÄÅ„ÅäÈáë„ÇíÂèñ„ÇäÊàª„Åó„Åü„Çä„ÄÅÂãüÈáë„Åó„Åü„Çä„Åß„Åç„Åæ„Åô</p>
                    </div>
                  </div>
                  
                  <div className="flex items-start space-x-3">
                    <span className="text-2xl">üí∞</span>
                    <div>
                      <p className="font-medium text-gray-900">2„Å§„ÅÆÈÅ∏ÊäûËÇ¢</p>
                      <p className="text-gray-600">ËøîÈáë„ÇíÂèó„ÅëÂèñ„Çã„Åã„ÄÅÊÖàÂñÑÂõ£‰Ωì„Å∏„ÅÆÂãüÈáë„Åã„ÇíÈÅ∏„Åπ„Åæ„Åô</p>
                    </div>
                  </div>
                </div>
              </div>

              <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                <h4 className="font-medium text-yellow-900 mb-2">üí° ÈáçË¶Å„Å™„Éù„Ç§„É≥„Éà</h4>
                <ul className="text-sm text-yellow-800 space-y-1">
                  <li>‚Ä¢ <strong>ËøîÈáëÈÅ∏ÊäûÊôÇ</strong>ÔºöÊâãÊï∞Êñô500ÂÜÜ„ÇíÂ∑Æ„ÅóÂºï„ÅÑ„ÅüÈáëÈ°ç„ÅåÂØæË±°„Å®„Å™„Çä„Åæ„Åô</li>
                  <li>‚Ä¢ <strong>ÂãüÈáëÈÅ∏ÊäûÊôÇ</strong>ÔºöÂèÇÂä†Ë≤ª„ÅÆÂÖ®È°ç„ÅåÂØæË±°„Å®„Å™„Çä„Åæ„ÅôÔºàÊâãÊï∞Êñô„Å™„ÅóÔºâ</li>
                  <li>‚Ä¢ <strong>Ë®òÈå≤„Çí„Å§„Åë„Å™„Åã„Å£„ÅüÊó•„ÅØ„Ç´„Ç¶„É≥„Éà„Åï„Çå„Åæ„Åõ„Çì</strong></li>
                  <li>‚Ä¢ 30Êó•ÈñìÊØéÊó•Ë®òÈå≤„Çí„Å§„Åë„ÅüÂ†¥Âêà„ÄÅÊ∫ÄÈ°ç„ÅåËøîÈáë„Åæ„Åü„ÅØÂãüÈáë„Åï„Çå„Åæ„Åô</li>
                </ul>
              </div>

              <button
                onClick={nextStep}
                className="w-full bg-indigo-600 text-white py-3 px-4 rounded-md text-lg font-medium hover:bg-indigo-700 transition-colors"
              >
                „Éû„Éç„Éº„É¢„É≥„Çπ„Çø„Éº„Å®„ÅÆÊà¶„ÅÑ„ÇíÂßã„ÇÅ„Çã üöÄ
              </button>
            </div>
          )}

          {/* „Çπ„ÉÜ„ÉÉ„Éó1: Âñ´ÁÖôÁä∂Ê≥Å */}
          {step === 1 && (
            <div className="space-y-6">
              <div className="text-center">
                <span className="text-4xl block mb-4">üö¨</span>
                <h2 className="text-2xl font-bold text-gray-900 mb-2">Âñ´ÁÖôÁä∂Ê≥Å„ÇíÊïô„Åà„Å¶„Åè„Å†„Åï„ÅÑ</h2>
                <p className="text-gray-600">ÁèæÂú®„ÅÆÂñ´ÁÖôÁä∂Ê≥Å„Å´Âü∫„Å•„ÅÑ„Å¶ÂèÇÂä†Ë≤ª„ÇíÁÆóÂá∫„Åó„Åæ„Åô</p>
              </div>
              
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">È†ªÂ∫¶</label>
                  <select
                    value={formData.smokingFrequency}
                    onChange={(e) => handleSelectChange(() => setFormData(prev => ({ 
                      ...prev, 
                      smokingFrequency: e.target.value as 'daily' | 'weekly' | 'monthly' 
                    })))}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
                  >
                    <option value="daily">1Êó•</option>
                    <option value="weekly">1ÈÄ±Èñì</option>
                    <option value="monthly">1„É∂Êúà</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">ÁÆ±Êï∞</label>
                  <select
                    value={formData.smokingAmount}
                    onChange={(e) => handleSelectChange(() => setFormData(prev => ({ 
                      ...prev, 
                      smokingAmount: parseFloat(e.target.value) 
                    })))}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
                  >
                    <option value="0.5">0.5ÁÆ±</option>
                    <option value="1">1ÁÆ±</option>
                    <option value="1.5">1.5ÁÆ±</option>
                    <option value="2">2ÁÆ±</option>
                    <option value="2.5">2.5ÁÆ±</option>
                    <option value="3">3ÁÆ±</option>
                    <option value="3.5">3.5ÁÆ±</option>
                    <option value="4">4ÁÆ±</option>
                    <option value="4.5">4.5ÁÆ±</option>
                    <option value="5">5ÁÆ±</option>
                    <option value="5.5">5.5ÁÆ±</option>
                    <option value="6">6ÁÆ±</option>
                    <option value="6.5">6.5ÁÆ±</option>
                    <option value="7">7ÁÆ±</option>
                    <option value="7.5">7.5ÁÆ±</option>
                    <option value="8">8ÁÆ±</option>
                    <option value="8.5">8.5ÁÆ±</option>
                    <option value="9">9ÁÆ±</option>
                    <option value="9.5">9.5ÁÆ±</option>
                    <option value="10">10ÁÆ±</option>
                  </select>
                </div>
              </div>
              
              <div className="bg-indigo-50 p-4 rounded-lg">
                <p className="text-indigo-800">
                  <span className="font-medium">ÊúàÈ°ç„Çø„Éê„Ç≥‰ª£: ¬•{calculateMonthlyAmount().toLocaleString()}</span>
                </p>
              </div>
              
              <div className="flex space-x-3">
                <button
                  onClick={prevStep}
                  className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 transition-colors"
                >
                  Êàª„Çã
                </button>
                <button
                  onClick={nextStep}
                  className="flex-1 bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 transition-colors"
                >
                  Ê¨°„Å∏
                </button>
              </div>
            </div>
          )}

          {/* „Çπ„ÉÜ„ÉÉ„Éó2: ÂèÇÂä†Ë≤ªË®≠ÂÆö */}
          {step === 2 && (
            <div className="space-y-6">
              <div className="text-center">
                <span className="text-4xl block mb-4">üí∞</span>
                <h2 className="text-2xl font-bold text-gray-900 mb-2">ÂèÇÂä†Ë≤ª„ÇíË®≠ÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ</h2>
                <p className="text-gray-600">
                  ÊúàÈ°ç„Çø„Éê„Ç≥‰ª£„ÇíÂü∫„Å´Êé®Â•®ÈáëÈ°ç„ÇíÁÆóÂá∫„Åó„Åæ„Åó„Åü
                </p>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ÂèÇÂä†Ë≤ªÔºàÊé®Â•®: ¬•{calculateMonthlyAmount().toLocaleString()}Ôºâ
                </label>
                <select
                  value={formData.participationFee}
                  onChange={(e) => handleSelectChange(() => setFormData(prev => ({ 
                    ...prev, 
                    participationFee: parseInt(e.target.value) 
                  })))}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
                >
                  {generateParticipationFeeOptions().map(amount => (
                    <option key={amount} value={amount}>
                      ¬•{amount.toLocaleString()}
                      {amount === calculateMonthlyAmount() && ' (Êé®Â•®)'}
                    </option>
                  ))}
                </select>
              </div>

              <div className="bg-purple-50 border border-purple-200 rounded-lg p-4">
                <h4 className="font-medium text-purple-900 mb-2">üêâ „Éû„Éç„Éº„É¢„É≥„Çπ„Çø„Éº„ÅÆ‰ΩìÂäõ</h4>
                <p className="text-purple-800 text-sm mb-3">
                  ÂèÇÂä†Ë≤ª¬•{formData.participationFee.toLocaleString()}„Åå„ÄÅ„Éû„Éç„Éº„É¢„É≥„Çπ„Çø„Éº„ÅÆ‰ΩìÂäõ„Å®„Å™„Çä„Åæ„Åô„ÄÇ
                  ÊØéÊó•„ÅÆË®òÈå≤„Åß„ÉÄ„É°„Éº„Ç∏„Çí‰∏é„Åà„ÄÅ30Êó•Èñì„ÅßÂÆåÂÖ®ÂãùÂà©„ÇíÁõÆÊåá„Åó„Åæ„Åó„Çá„ÅÜÔºÅ
                </p>
              </div>
              
              <div className="flex space-x-3">
                <button
                  onClick={prevStep}
                  className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 transition-colors"
                >
                  Êàª„Çã
                </button>
                <button
                  onClick={nextStep}
                  className="flex-1 bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 transition-colors"
                >
                  Ê¨°„Å∏
                </button>
              </div>
            </div>
          )}

          {/* „Çπ„ÉÜ„ÉÉ„Éó3: ËøîÈáë„ÉªÂãüÈáëÈÅ∏Êäû */}
          {step === 3 && (
            <div className="space-y-6">
              <div className="text-center">
                <span className="text-4xl block mb-4">üí∞</span>
                <h2 className="text-2xl font-bold text-gray-900 mb-2">Âèñ„ÇäÊàª„Åó„Åü„ÅäÈáë„ÅÆ‰Ωø„ÅÑÈÅì</h2>
                <p className="text-gray-600">„Éû„Éç„Éº„É¢„É≥„Çπ„Çø„Éº„Åã„ÇâÂèñ„ÇäÊàª„Åó„Åü„ÅäÈáë„Çí„Å©„ÅÜ„Åô„Çã„ÅãÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ</p>
              </div>

              <div className="space-y-4">
                <div 
                  className={`p-4 border-2 rounded-lg cursor-pointer transition-colors ${
                    formData.payoutMethod === 'refund' 
                      ? 'border-indigo-500 bg-indigo-50' 
                      : 'border-gray-200 hover:border-gray-300'
                  }`}
                  onClick={() => handleRadioClick(() => setFormData(prev => ({ ...prev, payoutMethod: 'refund' })))}
                >
                  <div className="flex items-start space-x-3">
                    <input
                      type="radio"
                      name="payoutMethod"
                      value="refund"
                      checked={formData.payoutMethod === 'refund'}
                      onChange={() => handleRadioClick(() => setFormData(prev => ({ ...prev, payoutMethod: 'refund' })))}
                      className="mt-1"
                    />
                    <div className="flex-1">
                      <h3 className="text-lg font-medium text-gray-900 mb-2">üí≥ ËøîÈáë„ÇíÂèó„ÅëÂèñ„Çã</h3>
                      <p className="text-sm text-gray-600 mb-3">Ë®òÈå≤Êó•Êï∞„Å´Âøú„Åò„Å¶„ÄÅÂèÇÂä†Ë≤ª„ÅÆ‰∏ÄÈÉ®„ÅåËøîÈáë„Åï„Çå„Åæ„Åô</p>
                      
                      <div className="bg-yellow-50 border border-yellow-200 rounded p-3 text-sm">
                        <p className="font-medium text-yellow-900 mb-1">‚ö†Ô∏è ÊâãÊï∞Êñô„Å´„Å§„ÅÑ„Å¶</p>
                        <p className="text-yellow-800">
                          {formData.participationFee === 0 
                            ? 'ÂèÇÂä†Ë≤ª0ÂÜÜ„ÅÆÂ†¥Âêà„ÄÅÊâãÊï∞Êñô„ÅØ„Åã„Åã„Çä„Åæ„Åõ„Çì'
                            : formData.participationFee <= 500
                            ? 'ÂèÇÂä†Ë≤ª„Åå500ÂÜÜ‰ª•‰∏ã„ÅÆÂ†¥Âêà„ÄÅËøîÈáëÈ°ç„ÅØ0ÂÜÜ„Å®„Å™„Çä„Åæ„Åô'
                            : 'ËøîÈáëÂá¶ÁêÜÊâãÊï∞Êñô„Å®„Åó„Å¶500ÂÜÜ„Åå„Åã„Åã„Çä„Åæ„Åô'
                          }
                        </p>
                        
                        <div className="mt-2 text-xs text-yellow-700">
                          {formData.participationFee === 0 ? (
                            <>
                              <p><strong>Ë®àÁÆóÊñπÊ≥ïÔºö</strong> 0ÂÜÜÔºàÊâãÊï∞Êñô„Å™„ÅóÔºâ</p>
                              <p><strong>‰æãÔºö</strong> ÂèÇÂä†Ë≤ª0ÂÜÜ„ÄÅ20Êó•Ë®òÈå≤ÊàêÂäü„Åó„ÅüÂ†¥Âêà</p>
                              <p>‚Üí <strong>0ÂÜÜ„ÅåËøîÈáë</strong>ÔºàÊâãÊï∞Êñô„Å™„ÅóÔºâ</p>
                            </>
                          ) : formData.participationFee <= 500 ? (
                            <>
                              <p><strong>Ë®àÁÆóÊñπÊ≥ïÔºö</strong> 0ÂÜÜÔºàÂèÇÂä†Ë≤ª„Åå500ÂÜÜ‰ª•‰∏ãÔºâ</p>
                              <p><strong>‰æãÔºö</strong> ÂèÇÂä†Ë≤ª{formData.participationFee}ÂÜÜ„ÄÅ20Êó•Ë®òÈå≤ÊàêÂäü„Åó„ÅüÂ†¥Âêà</p>
                              <p>‚Üí <strong>0ÂÜÜ„ÅåËøîÈáë</strong></p>
                            </>
                          ) : (
                            <>
                              <p><strong>Ë®àÁÆóÊñπÊ≥ïÔºö</strong> ÔºàÂèÇÂä†Ë≤ª - 500ÂÜÜÔºâ√ó Ë®òÈå≤ÊàêÂäüÊó•Êï∞ √∑ 30Êó•</p>
                              <p><strong>‰æãÔºö</strong> ÂèÇÂä†Ë≤ª{formData.participationFee.toLocaleString()}ÂÜÜ„ÄÅ20Êó•Ë®òÈå≤ÊàêÂäü„Åó„ÅüÂ†¥Âêà</p>
                              <p>‚Üí Ôºà{formData.participationFee.toLocaleString()}ÂÜÜ - 500ÂÜÜÔºâ√ó 20 √∑ 30 = <strong>{Math.round((formData.participationFee - 500) * 20 / 30).toLocaleString()}ÂÜÜ„ÅåËøîÈáë</strong></p>
                            </>
                          )}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                <div 
                  className={`p-4 border-2 rounded-lg cursor-pointer transition-colors ${
                    formData.payoutMethod === 'donation' 
                      ? 'border-indigo-500 bg-indigo-50' 
                      : 'border-gray-200 hover:border-gray-300'
                  }`}
                  onClick={() => handleRadioClick(() => setFormData(prev => ({ ...prev, payoutMethod: 'donation' })))}
                >
                  <div className="flex items-start space-x-3">
                    <input
                      type="radio"
                      name="payoutMethod"
                      value="donation"
                      checked={formData.payoutMethod === 'donation'}
                      onChange={() => handleRadioClick(() => setFormData(prev => ({ ...prev, payoutMethod: 'donation' })))}
                      className="mt-1"
                    />
                    <div className="flex-1">
                      <h3 className="text-lg font-medium text-gray-900 mb-2">üéÅ ÂãüÈáë„Åô„Çã</h3>
                      <p className="text-sm text-gray-600 mb-3">Ë®òÈå≤Êó•Êï∞„Å´Âøú„Åò„ÅüÈáëÈ°ç„Çí„ÄÅÈÅ∏Êäû„Åó„ÅüÂõ£‰Ωì„Å´ÂØÑ‰ªò„Åó„Åæ„Åô</p>
                      
                      <div className="bg-green-50 border border-green-200 rounded p-3 text-sm">
                        <p className="font-medium text-green-900 mb-1">‚ú® ÊâãÊï∞Êñô„Å™„Åó</p>
                        <p className="text-green-800">ÂèÇÂä†Ë≤ª„ÅÆÂÖ®È°ç„ÅåÂØÑ‰ªòÂØæË±°„Å®„Å™„Çä„Åæ„Åô</p>
                        
                        <div className="mt-2 text-xs text-green-700">
                          <p><strong>Ë®àÁÆóÊñπÊ≥ïÔºö</strong> ÂèÇÂä†Ë≤ª √ó Ë®òÈå≤ÊàêÂäüÊó•Êï∞ √∑ 30Êó•</p>
                          <p><strong>‰æãÔºö</strong> ÂèÇÂä†Ë≤ª{formData.participationFee.toLocaleString()}ÂÜÜ„ÄÅ20Êó•Ë®òÈå≤ÊàêÂäü„Åó„ÅüÂ†¥Âêà</p>
                          <p>‚Üí {formData.participationFee.toLocaleString()}ÂÜÜ √ó 20 √∑ 30 = <strong>{Math.round(formData.participationFee * 20 / 30).toLocaleString()}ÂÜÜ„ÇíÂãüÈáë</strong></p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <h4 className="font-medium text-blue-900 mb-2">üìã ÈáçË¶Å„Å™„É´„Éº„É´</h4>
                <ul className="text-sm text-blue-800 space-y-1">
                  <li>‚Ä¢ ÊØéÊó•Ë®òÈå≤„Çí„Å§„Åë„Çã„Åì„Å®„Åß„ÄåË®òÈå≤ÊàêÂäüÊó•Êï∞„Äç„Å®„Åó„Å¶„Ç´„Ç¶„É≥„Éà„Åï„Çå„Åæ„Åô</li>
                  <li>‚Ä¢ Á¶ÅÁÖô„Åß„Åç„ÅüÊó•„ÇÇ„ÄÅÂê∏„Å£„Å¶„Åó„Åæ„Å£„ÅüÊó•„ÇÇ„ÄÅË®òÈå≤„Åô„Çå„Å∞ÊàêÂäüÊó•„Å®„Åó„Å¶„Ç´„Ç¶„É≥„Éà„Åï„Çå„Åæ„Åô</li>
                  <li>‚Ä¢ „ÉÅ„É£„É¨„É≥„Ç∏„ÅÆÈÄî‰∏≠ÊîæÊ£Ñ„ÇÇÂèØËÉΩ„Åß„Åô„Åå„ÄÅÂèÇÂä†Ë≤ª„ÅÆËøîÈáë„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì</li>
                  <li>‚Ä¢ 30Êó•ÈñìÊØéÊó•Ë®òÈå≤„Çí„Å§„Åë„ÅüÂ†¥ÂêàÔºö
                    {formData.payoutMethod === 'refund' ? (
                      formData.participationFee > 500 
                        ? ` Ê∫ÄÈ°çÔºàÂèÇÂä†Ë≤ª-500ÂÜÜÔºâ„ÅåËøîÈáë„Åï„Çå„Åæ„Åô`
                        : ` ËøîÈáëÈ°ç„ÅØ0ÂÜÜ„Å®„Å™„Çä„Åæ„Åô`
                    ) : ` Ê∫ÄÈ°çÔºàÂèÇÂä†Ë≤ªÔºâ„ÅåÂãüÈáë„Åï„Çå„Åæ„Åô`}
                  </li>
                </ul>
              </div>

              <div className="bg-gray-50 border border-gray-200 rounded-lg p-4">
                <h4 className="font-medium text-gray-900 mb-2">üí° ÁõÆÊ®ôÈáëÈ°ç</h4>
                <p className="text-gray-700 text-sm">
                  {formData.payoutMethod === 'refund' ? (
                    <>
                      <strong>ÁõÆÊ®ôÂèñ„ÇäÊàª„ÅóÈáëÈ°ç:</strong> ¬•{
                        formData.participationFee > 500 
                          ? (formData.participationFee - 500).toLocaleString()
                          : '0'
                      }
                      <br />
                      <span className="text-xs text-gray-600">
                        {formData.participationFee === 0 
                          ? 'ÔºàÂèÇÂä†Ë≤ª0ÂÜÜ„ÅÆ„Åü„ÇÅÊâãÊï∞Êñô„Å™„ÅóÔºâ'
                          : formData.participationFee <= 500
                          ? 'ÔºàÂèÇÂä†Ë≤ª„Åå500ÂÜÜ‰ª•‰∏ã„ÅÆ„Åü„ÇÅËøîÈáë„Å™„ÅóÔºâ'
                          : 'ÔºàÂèÇÂä†Ë≤ª - ÊâãÊï∞Êñô500ÂÜÜÔºâ'
                        }
                      </span>
                    </>
                  ) : (
                    <>
                      <strong>ÁõÆÊ®ôÂãüÈáëÈ°ç:</strong> ¬•{formData.participationFee.toLocaleString()}
                      <br />
                      <span className="text-xs text-gray-600">ÔºàÂèÇÂä†Ë≤ª„ÅÆÂÖ®È°çÔºâ</span>
                    </>
                  )}
                </p>
              </div>
              
              <div className="flex space-x-3">
                <button
                  onClick={prevStep}
                  className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 transition-colors"
                >
                  Êàª„Çã
                </button>
                <button
                  onClick={nextStep}
                  className="flex-1 bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 transition-colors"
                >
                  Ê¨°„Å∏
                </button>
              </div>
            </div>
          )}

          {/* „Çπ„ÉÜ„ÉÉ„Éó4: ÂãüÈáëÂÖàÈÅ∏ÊäûÔºàÂãüÈáëÈÅ∏ÊäûÊôÇ„ÅÆ„ÅøÔºâ */}
          {step === 4 && formData.payoutMethod === 'donation' && (
            <div className="space-y-6">
              <div className="text-center">
                <span className="text-4xl block mb-4">üéØ</span>
                <h2 className="text-2xl font-bold text-gray-900 mb-2">„Åä„Åô„Åô„ÇÅÂØÑ‰ªòÂÖà</h2>
                <p className="text-gray-600">
                  „ÉÅ„É£„É¨„É≥„Ç∏ÈÅîÊàêÁéá„Å´Âøú„Åò„ÅüÈáëÈ°ç„ÇíÂØÑ‰ªò„Åó„Åæ„Åô
                </p>
                <p className="text-sm text-gray-500 mt-1">
                  {totalTargetsCount}„ÅÆÂØÑ‰ªòÂÖà„Åã„ÇâÂé≥ÈÅ∏„Åó„Åü6„Å§„Çí„ÅîÁ¥π‰ªã
                </p>
                <div className="mt-3 flex justify-center">
                  <button
                    onClick={handleRefreshRecommendations}
                    disabled={isLoadingTargets}
                    className="inline-flex items-center px-3 py-1 text-sm text-indigo-600 hover:text-indigo-800 disabled:opacity-50"
                  >
                    üîÑ Âà•„ÅÆÂØÑ‰ªòÂÖà„ÇíÊèêÊ°à
                  </button>
                </div>
              </div>
              
              <div className="space-y-3">
                {isLoadingTargets ? (
                  <div className="text-center py-8 text-gray-500">
                    <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto mb-4"></div>
                    Êñ∞„Åó„ÅÑÂØÑ‰ªòÂÖà„ÇíÊé¢„Åó„Å¶„ÅÑ„Åæ„Åô...
                  </div>
                ) : donationTargets.length === 0 ? (
                  <div className="text-center py-8 text-gray-500">
                    Âà©Áî®ÂèØËÉΩ„Å™ÂãüÈáëÂÖà„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ
                    <button
                      onClick={handleRefreshRecommendations}
                      className="ml-2 text-indigo-600 hover:underline"
                    >
                      ÂÜçË™≠„ÅøËæº„Åø
                    </button>
                  </div>
                ) : (
                  donationTargets.map((target) => (
                    <label
                      key={target.id}
                      className={`block p-4 border rounded-lg cursor-pointer transition-colors ${
                        formData.donationTargetId === target.id
                          ? 'border-indigo-500 bg-indigo-50'
                          : 'border-gray-300 hover:border-gray-400'
                      }`}
                      onClick={() => handleRadioClick(() => setFormData(prev => ({ 
                        ...prev, 
                        donationTargetId: target.id 
                      })))}
                    >
                      <input
                        type="radio"
                        name="donationTarget"
                        value={target.id}
                        checked={formData.donationTargetId === target.id}
                        onChange={(e) => handleRadioClick(() => setFormData(prev => ({ 
                          ...prev, 
                          donationTargetId: e.target.value 
                        })))}
                        className="sr-only"
                      />
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <h3 className="font-medium text-gray-900">{target.name}</h3>
                          <p className="text-sm text-gray-600 mt-1">{target.description}</p>
                        </div>
                        <div className="flex items-center space-x-2 ml-4">
                          {target.website_url && (
                            <button
                              onClick={(e) => {
                                e.preventDefault()
                                if (target.website_url) {
                                  window.open(target.website_url, '_blank')
                                }
                              }}
                              className="text-xs text-blue-600 hover:text-blue-800 border border-blue-300 rounded px-2 py-1"
                            >
                              Ë©≥Á¥∞
                            </button>
                          )}
                          {formData.donationTargetId === target.id && (
                            <span className="text-indigo-600 text-lg">‚úì</span>
                          )}
                        </div>
                      </div>
                    </label>
                  ))
                )}
              </div>
              
              <div className="text-center text-xs text-gray-500 bg-gray-50 p-3 rounded">
                üí° ÊØéÂõûÁï∞„Å™„ÇãÂØÑ‰ªòÂÖà„Çí„Åä„Åô„Åô„ÇÅ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ„ÅÇ„Å™„Åü„ÅÆÈñ¢ÂøÉ„Å´Âêà„ÅÜÊ¥ªÂãï„ÇíË¶ã„Å§„Åë„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ
              </div>
              
              <div className="flex space-x-3">
                <button
                  onClick={prevStep}
                  className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 transition-colors"
                >
                  Êàª„Çã
                </button>
                <button
                  onClick={nextStep}
                  disabled={!formData.donationTargetId}
                  className="flex-1 bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 transition-colors disabled:opacity-50"
                >
                  Ê¨°„Å∏
                </button>
              </div>
            </div>
          )}

          {/* „Çπ„ÉÜ„ÉÉ„Éó5: Ë®òÈå≤ÊôÇÈñìË®≠ÂÆö */}
          {step === 5 && (
            <div className="space-y-6">
              <div className="text-center">
                <span className="text-4xl block mb-4">‚è∞</span>
                <h2 className="text-2xl font-bold text-gray-900 mb-2">Ë®òÈå≤ÊôÇÈñì„ÇíË®≠ÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ</h2>
                <p className="text-gray-600">ÊØéÊó•„Åì„ÅÆÊôÇÈñì„Å´Ë®òÈå≤„Çí‰øÉ„Åô„É™„Éû„Ç§„É≥„ÉÄ„Éº„ÅåÂ±ä„Åç„Åæ„Åô</p>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">Ë®òÈå≤ÊôÇÈñì</label>
                <input
                  type="time"
                  value={formData.recordTime}
                  onChange={(e) => handleSelectChange(() => setFormData(prev => ({ 
                    ...prev, 
                    recordTime: e.target.value 
                  })))}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
                />
              </div>
              
              <div className="bg-green-50 p-4 rounded-lg">
                <h3 className="font-medium text-green-800 mb-2">üèÅ Ë®≠ÂÆöÂÆå‰∫ÜÔºÅ</h3>
                <p className="text-green-700 text-sm">
                  „Åì„Çå„Åß30Êó•Èñì„ÅÆÁ¶ÅÁÖô„ÉÅ„É£„É¨„É≥„Ç∏„ÇíÈñãÂßã„Åô„ÇãÊ∫ñÂÇô„ÅåÊï¥„ÅÑ„Åæ„Åó„Åü„ÄÇ
                  „Éû„Éç„Éº„É¢„É≥„Çπ„Çø„Éº„Å®„ÅÆÊà¶„ÅÑ„ÇíÂßã„ÇÅ„Åæ„Åó„Çá„ÅÜÔºÅ
                </p>
              </div>
              
              <div className="flex space-x-3">
                <button
                  onClick={prevStep}
                  className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 transition-colors"
                >
                  Êàª„Çã
                </button>
                <button
                  onClick={handleSubmit}
                  disabled={loading}
                  className="flex-1 bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 transition-colors disabled:opacity-50"
                >
                  {loading ? 'Ë®≠ÂÆö‰∏≠...' : '„ÉÅ„É£„É¨„É≥„Ç∏ÈñãÂßãÔºÅ'}
                </button>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  )
} 